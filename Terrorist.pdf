
# # EDA

#imports

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from mpl_toolkits.basemap import Basemap

get_ipython().magic('matplotlib inline')




# Loading data into a dataframe
df= pd.read_csv('indiadata.csv')



df.head(3)




df.loc[:,('Weapon Type')][df['Weapon Type']=='Vehicle (not to include vehicle-borne explosives, i.e., car or truck bombs)']= 'Vechicle only'



df.info()


# ## Univariate analysis
# #### 1. Year


#Distribution of attacks in a year

plt.figure(figsize=(10,6))
sns.set_context('poster',font_scale=0.7)
sns.countplot(df['Year'])
plt.title('Attacks In a Year')


# #### 2.City



#total no of differnt cities faced terrorist attacks
len(np.unique(df['City']))


# #### 3. Attack Type


# Counts of differnt type of attacks
plt.figure(figsize=(10,6))
sns.countplot(y=df['attack type'])
plt.title('Count of Attack Types')


# #### 4.Target Type


# Counts of attacks on Differnt types of targets 
plt.figure(figsize=(10,6))
sns.countplot(y=df['Target Type'])
plt.title('Count of attacks on various Targets ')


# #### 5.Weapon Type



# Counts of weapons used in attacks

plt.figure(figsize=(10,6))
sns.countplot(y=df['Weapon Type'])
plt.title('Count of attacks with various Weapons ')


# #### 6.Terrorist Organisation



# top 25 terrorist orgainsations
df['Terrorist Organization'].value_counts()[:25]


# ## Bivariate Analysis



# distribution of differtent types of attacks thought the year

plt.figure(figsize=(15,6))
sns.countplot(df['Year'],hue=df['attack type'],palette='Set1')
plt.legend(loc='upper left')
plt.title('Count of different attacks types in years ')




# distribution of differtent types of weapons used throught the year

plt.figure(figsize=(15,6))
sns.countplot(df['Year'],hue=df['Weapon Type'],palette='Set2')
plt.legend(loc='upper left')
plt.title('Count of different weapons w.r.t Years ')


# # Multivariate analysis on Map



plt.figure(figsize=(10,10))
map = Basemap(projection='mill',
    resolution = 'i', 
    llcrnrlon=60, llcrnrlat=6.0,
    urcrnrlon=100, urcrnrlat=36)
 
map.drawcoastlines()
map.drawcountries()


map.fillcontinents(color = 'white',lake_color='aqua')
map.drawmapboundary(fill_color='aqua')

lont = list(df['longitude'][df['Weapon Type']=='Explosives/Bombs/Dynamite'])
latt = list(df['latitude'][df['Weapon Type']=='Explosives/Bombs/Dynamite'])
xst,yst = map(lont, latt)
p3,=map.plot(xst, yst, 'bo', markersize=5,alpha=0.5)
lons = list(df['longitude'][df['Weapon Type']=='Firearms'])
lats = list(df['latitude'][df['Weapon Type']=='Firearms'])
x,y = map(lons, lats)
p1, =map.plot(x, y, 'yo', markersize=5,alpha=0.5)
lon = list(df['longitude'][df['Weapon Type']=='Melee'])
lat = list(df['latitude'][df['Weapon Type']=='Melee'])
xs,ys = map(lon, lat)
p2,=map.plot(xs, ys, 'ro', markersize=5,alpha=0.5)

plt.legend([p1,p2,p3],['Firearms','Melee','Explosives/Bombs/Dynamite'],
           bbox_to_anchor=(1, 1),fontsize='xx-small')

plt.title('Weapon Type Used')

plt.show()




sns.set_context('poster',font_scale=1.2)
plt.figure(figsize=(10,10))
m = Basemap(width=5000000,height=5000000,projection='lcc',
            resolution=None,lat_1=20,lat_2=10,lat_0=29
            ,lon_0=82.5)
m.bluemarble()

lons = list(df['longitude'][df['attack type']=='Bombing/Explosion'])
lats = list(df['latitude'][df['attack type']=='Bombing/Explosion'])
x,y = map(lons, lats)
p0,=map.plot(x, y, 'bo', markersize=5)
lon = list(df['longitude'][df['attack type']=='Melee'])
lat = list(df['latitude'][df['attack type']=='Melee'])
xs,ys = map(lon, lat)
p1,=map.plot(xs, ys, 'go', markersize=5)
lons = list(df['longitude'][df['attack type']=='Armed Assault'])
lats = list(df['latitude'][df['attack type']=='Armed Assault'])
x,y = map(lons, lats)
p2 ,=map.plot(x, y, 'yo', markersize=5)
lons = list(df['longitude'][df['attack type']=='Hostage Taking (Kidnapping)'])
lats = list(df['latitude'][df['attack type']=='Hostage Taking (Kidnapping)'])
x,y = map(lons, lats)
p3 ,=map.plot(x, y, 'ro', markersize=5,alpha=0.5)


plt.legend([p2, p0,p3,p1], ['Armed Assault', 'Bombing/Explosion', "Hostage Taking (Kidnapping)",'Melee'],
           fontsize='xx-small', bbox_to_anchor=(1.4, 1))
plt.title('TYPE OF ATTACKS')
plt.show()



sns.set_context('poster',font_scale=1)
plt.figure(figsize=(10,10),dpi=500)
map = Basemap(projection='mill',
    resolution = 'i', 
    llcrnrlon=60, llcrnrlat=6.0,
    urcrnrlon=100, urcrnrlat=36)
 
map.drawcoastlines()
map.drawcountries()


map.fillcontinents(color = '#FFFF00',lake_color='aqua')
map.drawmapboundary(fill_color='aqua')

lons = list(df['longitude'][df['Terrorist Organization']=='Lashkar-e-Taiba (LeT)'])
lats = list(df['latitude'][df['Terrorist Organization']=='Lashkar-e-Taiba (LeT)'])
x,y = map(lons, lats)
p3,=map.plot(x, y, 'bo', markersize=5)
lon = list(df['longitude'][df['Terrorist Organization']=='Communist Party of India - Maoist (CPI-Maoist)'])
lat = list(df['latitude'][df['Terrorist Organization']=='Communist Party of India - Maoist (CPI-Maoist)'])
xs,ys = map(lon, lat)
p2,=map.plot(xs, ys, 'go', markersize=5)

lont = list(df['longitude'][df['Terrorist Organization']=='Indian Mujahideen'])
latt = list(df['latitude'][df['Terrorist Organization']=='Indian Mujahideen'])
xst,yst = map(lont, latt)
p1,=map.plot(xst, yst, 'ro', markersize=8)

lont = list(df['longitude'][df['Terrorist Organization']=='United Liberation Front of Assam (ULFA)'])
latt = list(df['latitude'][df['Terrorist Organization']=='United Liberation Front of Assam (ULFA)'])
xst,yst = map(lont, latt)
p4,=map.plot(xst, yst, 'co', markersize=5)
lont = list(df['longitude'][df['Terrorist Organization']=='Hizbul Mujahideen (HM)'])
latt = list(df['latitude'][df['Terrorist Organization']=='Hizbul Mujahideen (HM)'])
xst,yst = map(lont, latt)
p5,=map.plot(xst, yst, 'mo', markersize=4.5,alpha=0.5)
plt.legend([p2, p1,p3,p4,p5],
           ['Communist Party of India - Maoist (CPI-Maoist)', 'Indian Mujahideen', 'Lashkar-e-Taiba (LeT)',
            'United Liberation Front of Assam (ULFA)','Hizbul Mujahideen (HM)'],bbox_to_anchor=(1.05, 1),fontsize='xx-small')
plt.title('TERRITORY of TERRORIST GROUPS')
plt.show()






